import { PostgrestJsConfig } from '../../index';
import { PostgrestJsFilterGroup, PostgrestJsFilterParam } from '../definitions';
/**
 * Updates a model filtered by passed filters
 * @param model Model to update
 * @param filters An array of filter params or operations
 * @param payload Object with values to be updated
 * @param config Configuration object
 */
export declare function update(model: string, filters: Array<PostgrestJsFilterParam | PostgrestJsFilterGroup>, payload: any, config: PostgrestJsConfig): Promise<{
    item: any;
}>;
/**
 * Updates a model filtering by specified column value
 * @param model Model to update
 * @param column Column to filter the update by
 * @param columnValue Column value to filter the update by
 * @param payload Object with values to be updated
 * @param config Configuration object
 */
export declare function updateByColumn(model: string, column: any, columnValue: any, payload: any, config: PostgrestJsConfig): Promise<{
    item: any;
}>;
/**
 * Updates a model by id column
 * @param model Model to update
 * @param id Id of the row to update
 * @param payload Object with values to be updated
 * @param config Configuration object
 */
export declare function updateById(model: string, id: any, payload: any, config: PostgrestJsConfig): Promise<{
    item: any;
}>;
